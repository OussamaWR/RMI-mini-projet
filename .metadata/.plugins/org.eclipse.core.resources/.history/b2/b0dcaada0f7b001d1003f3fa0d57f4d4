package bookRepoImp;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import bookRepository.BookRepository;
import entities.Book;

public class BookRepoImp extends UnicastRemoteObject implements BookRepository  {

	private Connection con ; 
	private PreparedStatement pst ;	
	private ResultSet res ; 
	
	
	protected BookRepoImp() throws RemoteException {
		super();
		
	}

	@Override
	public void Connect() throws RemoteException {
		 try {
	            Class.forName("com.mysql.cj.jdbc.Driver");
	            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/javacrud", "root","");
	        }
	        catch (ClassNotFoundException ex)
	        {
	          ex.printStackTrace();
	        }
	        catch (SQLException ex)
	        {
	            ex.printStackTrace();
	        }
	 

	}

	@Override
	public int AddBook(String name, String edition, String price, String author) throws RemoteException  {
	try {
		pst = con.prepareStatement("insert into book(name,edition,price ,author)values(?,?,?,?)");
		pst.setString(1, name);
		pst.setString(2, edition);
		pst.setString(3, price);
		pst.setString(4, author);
		
		pst.executeUpdate();
		return 1;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	public int UpdateBook(String name, String edition, String price, String Author) throws RemoteException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Book GetById(String id) throws RemoteException {
		  try {
			pst = con.prepareStatement("select name,edition,price,author from book where id = ?");
		
		  pst.setString(1, id);
          ResultSet rs = pst.executeQuery();
	      if(rs.next()==true)
	      {
	         return new Book( rs.getString(1) ,rs.getString(4) ,rs.getString(3) , rs.getString(2));
	      }
    
		  } catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
         
          
		return null;
	}

	
	@Override
	public int DeleteById(String id) throws RemoteException {
		try {
				pst = con.prepareStatement("delete from book where id =?");
	    pst.setString(1, id);
	    pst.executeUpdate();
	    return 1 ;
		} catch (Exception e) {
			// TODO: handle exception
		}
	
		return 0;
	}

	@Override
	public ResultSet GetAll() throws RemoteException {
		
		try {
			pst = con.prepareStatement("select * from book");
			res = pst.executeQuery();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return res;
	}

}
